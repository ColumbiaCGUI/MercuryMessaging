<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusion.Unity</name>
    </assembly>
    <members>
        <member name="F:Fusion.NetworkRunnerVisibilityExtensions.RecognizedBehaviourNames">
            <summary>
            Types that fusion.runtime isn't aware of, which need to be found using names instead.
            </summary>
        </member>
        <member name="M:Fusion.NetworkRunnerVisibilityExtensions.AddVisibilityNodes(Fusion.NetworkRunner,UnityEngine.GameObject)">
            <summary>
            Find all component types that contribute to a scene rendering, and associate them with a <see cref="T:Fusion.RunnerVisibilityLink"/> component, 
            and add them to the runner's list of visibility nodes.
            </summary>
            <param name="go"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Fusion.NetworkRunnerVisibilityExtensions.RefreshRunnerVisibility(Fusion.NetworkRunner,System.Boolean)">
            <summary>
            Reapplies a runner's IsVisibile setting to all of its registered visibility nodes.
            </summary>
            <param name="runner"></param>
            <param name="refreshCommonObjects"></param>
        </member>
        <member name="F:Fusion.NetworkRunnerVisibilityExtensions.CommonObjectLookup">
            <summary>
            Dictionary lookup for manually added visibility nodes (which indicates only one instance should be visible at a time), 
            which returns a list of nodes for a given LocalIdentifierInFile.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraphBase._statSourceType">
            <summary>
            Which section of the Fusion engine is being monitored. In combination with StatId, this selects the stat being monitored.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraphBase._statId">
            <summary>
            The specific stat being monitored.
            </summary>
        </member>
        <member name="T:Fusion.FusionStats">
            <summary>
            Creates and controls a Canvas with one or multiple telemetry graphs. Can be created as a scene object or prefab,
            or be created at runtime using the <see cref="M:Fusion.FusionStats.Create(UnityEngine.Transform,Fusion.NetworkRunner,System.Nullable{Fusion.FusionStats.DefaultLayouts},System.Nullable{Fusion.FusionStats.DefaultLayouts})"/> methods. If created as the child of a <see cref="T:Fusion.NetworkObject"/>
            then <see cref="P:Fusion.FusionStats.EnableObjectStats"/> will automatically be set to true.
            </summary>
        </member>
        <member name="M:Fusion.FusionStats.Create(UnityEngine.Transform,Fusion.NetworkRunner,System.Nullable{Fusion.FusionStats.DefaultLayouts},System.Nullable{Fusion.FusionStats.DefaultLayouts})">
            <summary>
            Creates a new GameObject with a <see cref="T:Fusion.FusionStats"/> component, attaches it to any supplied parent, and generates Canvas/Graphs.
            </summary>
            <param name="runner"></param>
            <param name="parent">Generated FusionStats component and GameObject will be added as a child of this transform.</param>
            <param name="objectLayout">Uses a predefined position.</param>
            <param name="netStatsMask">The network stats to be enabled. If left null, default statistics will be used.</param>
            <param name="simStatsMask">The simulation stats to be enabled. If left null, default statistics will be used.</param>
        </member>
        <member name="T:Fusion.FusionStats.StatCanvasTypes">
            <summary>
            Options for displaying stats as screen overlays or world GameObjects.
            </summary>
        </member>
        <member name="T:Fusion.FusionStats.DefaultLayouts">
            <summary>
            Predefined layout default options.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.RedrawInterval">
            <summary>
            Interval (in seconds) between Graph redraws. Higher values (longer intervals) reduce CPU overhead, draw calls and garbage collection. 
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._canvasType">
            <summary>
            Selects between displaying Canvas as screen overlay, or a world GameObject.
            </summary>
        </member>
        <member name="P:Fusion.FusionStats.CanvasType">
            <summary>
            Selects between displaying Canvas as screen overlay, or a world GameObject.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._showButtonLabels">
            <summary>
            Enables text labels for the control buttons.
            </summary>
        </member>
        <member name="P:Fusion.FusionStats.ShowButtonLabels">
            <summary>
            Enables text labels for the control buttons.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._maxHeaderHeight">
            <summary>
            Height of button region at top of the stats panel. Values less than or equal to 0 hide the buttons, and reduce the header size.
            </summary>
        </member>
        <member name="P:Fusion.FusionStats.MaxHeaderHeight">
            <summary>
            Height of button region at top of the stats panel. Values less than or equal to 0 hide the buttons, and reduce the header size.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.CanvasScale">
            <summary>
             The size of the canvas when <see cref="P:Fusion.FusionStats.CanvasType"/> is set to <see cref="F:Fusion.FusionStats.StatCanvasTypes.GameObject"/>.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.CanvasDistance">
            <summary>
            The distance on the Z axis the canvas will be positioned. Allows moving the canvas in front of or behind the parent GameObject.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._gameObjectRect">
            <summary>
            The Rect which defines the position of the stats canvas on a GameObject. Sizes are normalized percentages.(ranges of 0f-1f).
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._overlayRect">
            <summary>
            The Rect which defines the position of the stats canvas overlay on the screen. Sizes are normalized percentages.(ranges of 0f-1f).
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._defaultLayout">
            <summary>
            <see cref="T:Fusion.FusionStatsGraph.Layouts"/> value which all child <see cref="T:Fusion.FusionStatsGraph"/> components will use if their <see cref="T:Fusion.FusionStatsGraph.Layouts"/> value is set to Auto.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._noTextOverlap">
            <summary>
            UI Text on FusionGraphs can only overlay the bar graph if the canvas is perfectly facing the camera. 
            Any other angles will result in ZBuffer fighting between the text and the graph bar shader.
            For uses where perfect camera billboarding is not possible (such as VR), this toggle prevents FusionGraph layouts being used where text and graphs overlap.
            Normally leave this unchecked, unless you are experiencing corrupted text rendering.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._noGraphShader">
            <summary>
            Disables the bar graph in <see cref="T:Fusion.FusionStatsGraph"/>, and uses a text only layout.
            Enable this if <see cref="T:Fusion.FusionStatsGraph"/> is not rendering correctly in VR.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.GraphColumnCount">
            <summary>
            Force graphs layout to use X number of columns.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._graphMaxWidth">
            <summary>
            If <see cref="F:Fusion.FusionStats.GraphColumnCount"/> is set to zero, then columns will automatically be added as needed to limit graphs to this width or less.
            </summary>
        </member>
        <member name="P:Fusion.FusionStats.GraphMaxWidth">
            <summary>
            If <see cref="F:Fusion.FusionStats.GraphColumnCount"/> is set to zero, then columns will automatically be added as needed to limit graphs to this width or less.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._enableObjectStats">
            <summary>
            Enables/Disables all NetworkObject related elements.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._object">
            <summary>
            The <see cref="T:Fusion.NetworkObject"/> source for any <see cref="!:Stats.ObjStats"/> specific telemetry.
            </summary>
        </member>
        <member name="P:Fusion.FusionStats.Object">
            <summary>
            Returns the set serialized <see cref="T:Fusion.NetworkObject"/> for this stat window. If that is null, returns the static MonitoredNetworkObject,
            which can be set using <see cref="M:Fusion.FusionStats.SetMonitoredNetworkObject(Fusion.NetworkObject)"/>.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._objectTitleHeight">
            <summary>
            Height of Object title region at top of the stats panel.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._objectIdsHeight">
            <summary>
            Height of Object info region at top of the stats panel.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._objectMetersHeight">
            <summary>
            Height of Object info region at top of the stats panel.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._runner">
            <summary>
            The <see cref="T:Fusion.NetworkRunner"/> currently associated with this <see cref="T:Fusion.FusionStats"/> component and graphs.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.RunnerFromSelected">
            <summary>
            Editor-Only. If no <see cref="P:Fusion.FusionStats.Object"/> is set, this FusionStats will attempt to connect to the NetworkRunner for the current selected GameObject.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.InitializeAllGraphs">
            <summary>
            Initializes a <see cref="T:Fusion.FusionStatsGraph"/> for all available stats, even if not initially included. 
            If disabled, graphs added after initialization will be added to the bottom of the interface stack.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.ConnectTo">
            <summary>
            When <see cref="F:Fusion.FusionStats._runner"/> is null and no <see cref="T:Fusion.NetworkRunner"/> exists in the current scene, FusionStats will continuously attempt to find and connect to an active <see cref="T:Fusion.NetworkRunner"/> which matches these indicated modes.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._includedObjStats">
            <summary>
            Selects which NetworkObject stats should be displayed.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._includedNetStats">
            <summary>
            Selects which NetConnection stats should be displayed.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._includedSimStats">
            <summary>
            Selects which Simulation stats should be displayed.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.AutoDestroy">
            <summary>
            Automatically destroys this <see cref="T:Fusion.FusionStats"/> GameObject if the associated runner is null or inactive.
            Otherwise attempts will continuously be made to find an new active runner which is running in <see cref="T:Fusion.SimulationModes"/> specified by <see cref="F:Fusion.FusionStats.ConnectTo"/>, and connect to that.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.EnforceSingle">
            <summary>
            Only one instance with the <see cref="F:Fusion.FusionStats.Guid"/> can exist if there is no associated <see cref="T:Fusion.NetworkObject"/> <see cref="F:Fusion.FusionStats._object"/>. Will destroy any additional instances on Awake.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.Guid">
            <summary>
            Identifier used to enforce single instances of <see cref="T:Fusion.FusionStats"/> when running in Multi-Peer mode. 
            When <see cref="F:Fusion.FusionStats.EnforceSingle"/> is enabled, only one instance of <see cref="T:Fusion.FusionStats"/> with this GUID will be active at any time,
            regardless of the total number of peers running.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.LabelFont">
            <summary>
            The font to be used for all non-number labels.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats.ValueFont">
            <summary>
            The font to be used for all number labels.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._modifyColors">
            <summary>
            Shows/hides controls in the inspector for defining element colors.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._graphColorGood">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._graphColorWarn">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._graphColorBad">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:Fusion.FusionStats._graphColorFlag">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="M:Fusion.FusionStats.SetMonitoredNetworkObject(Fusion.NetworkObject)">
            <summary>
            Any FusionStats instance with NetworkObject stats enabled, will use this Object when that FusionStats.Object is null.
            </summary>
            <param name="no"></param>
        </member>
        <member name="T:Fusion.FusionStatsBillboard">
            <summary>
            Companion component for <see cref="T:Fusion.FusionStats"/>, which automatically faces this GameObject toward the supplied Camera. If Camera == null, will face towards Camera.main.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsBillboard.Camera">
            <summary>
            Force a particular camera to billboard this object toward. Leave null to use Camera.main.
            </summary>
        </member>
        <member name="T:Fusion.EnableOnSingleRunner">
            <summary>
            Automatically adds a <see cref="T:Fusion.RunnerVisibilityLink"/> for each indicated component. 
            These indicated components will be limited to no more than one enabled instance when running in Multi-Peer mode.
            </summary>
        </member>
        <member name="F:Fusion.EnableOnSingleRunner.PreferredRunner">
            <summary>
            If more than one runner instance is visible, this indicates which peer's clone of this entity should be visible.
            </summary>
        </member>
        <member name="F:Fusion.EnableOnSingleRunner.Components">
            <summary>
            Collection of components that will be marked for Multi-Peer mode as objects that should only have one enabled instance.
            </summary>
        </member>
        <member name="F:Fusion.EnableOnSingleRunner._guid">
            <summary>
            Prefix for the GUIDs of <see cref="T:Fusion.RunnerVisibilityLink"/> components which are added at runtime.
            </summary>
        </member>
        <member name="M:Fusion.EnableOnSingleRunner.AddNodes">
            <summary>
            At runtime startup, this adds a <see cref="T:Fusion.RunnerVisibilityLink"/> for each component reference to this GameObject.
            </summary>
        </member>
        <member name="M:Fusion.EnableOnSingleRunner.FindRecognizedTypes">
            <summary>
            Finds visual/audio components on this GameObject, and adds them to the Components collection.
            </summary>
        </member>
        <member name="M:Fusion.EnableOnSingleRunner.FindNestedRecognizedTypes">
            <summary>
            Finds visual/audio nested components on this GameObject and its children, and adds them to the Components collection.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsMeterBar.MeterMax">
            <summary>
            Values greater than 0 will limit the meter to a range of 0 to MeterMax.
            Value of 0 will adjust the max to the largest value occurrence.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsMeterBar._showUITargets">
            <summary>
            Exposes the UI labels and controls of <see cref="T:Fusion.FusionStatsGraph"/>, so they may be modified if customizing this graph.
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.UseGlobalPrefix">
            <summary>
            If true, all messages will be prefixed with [Fusion] tag
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.UseColorTags">
            <summary>
            If true, some parts of messages will be enclosed with &lt;color&gt; tags.
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.AddHashCodePrefix">
            <summary>
            If true, each log message that has a source parameter will be prefixed with a hash code of the source object. 
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.GlobalPrefixColor">
            <summary>
            Color of the global prefix (see <see cref="F:Fusion.FusionUnityLogger.UseGlobalPrefix"/>).
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.MinRandomColor">
            <summary>
            Min Random Color
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.MaxRandomColor">
            <summary>
            Max Random Color
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.ServerColor">
            <summary>
            Server Color
            </summary>
        </member>
        <member name="T:Fusion.EnableRunnerVisibility">
            <summary>
            When running in Multi-Peer mode, this component automatically will register the associated <see cref="T:Fusion.NetworkRunner"/> with <see cref="T:Fusion.NetworkRunnerVisibilityExtensions"/>,
            and will automatically attach loaded scene objects and spawned objects with the peers visibility handling.
            </summary>
        </member>
        <member name="T:Fusion.RunnerVisibilityLinksRoot">
            <summary>
            Flag component which indicates a NetworkObject has already been factored into a Runner's VisibilityNode list.
            </summary>
        </member>
        <member name="T:Fusion.StatsInternal.StatSourceTypes">
            <summary>
            Engine sources for Samples.
            </summary>
        </member>
        <member name="M:Fusion.StatsInternal.FusionStatsExtensions.GetLongName(Fusion.StatsInternal.StatSourceTypes,System.Int32)">
            <summary>
            Get the cached Long Name for the stat source and type.
            </summary>
        </member>
        <member name="T:Fusion.FieldsMask">
            <summary>
            Base class for <see cref="T:Fusion.FieldsMask`1"/>.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask.#ctor(Fusion.Mask256)">
            <summary>
            Constructor for <see cref="T:Fusion.FieldsMask"/>.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Constructor for <see cref="T:Fusion.FieldsMask"/>.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask.#ctor">
            <summary>
            Constructor for <see cref="T:Fusion.FieldsMask"/>.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask.op_Implicit(Fusion.FieldsMask)~Fusion.Mask256">
            <summary>
            Implicitly convert <see cref="T:Fusion.FieldsMask"/> to its long mask value.
            </summary>
        </member>
        <member name="T:Fusion.FieldsMask`1">
            <summary>
            Associates and displays a 64 bit mask which represents the field members of a struct. Makes it possible to treat a Struct like an Flags Enum.
            NOTE: A <see cref="T:Fusion.FieldsMask`1"/> attribute is required for proper rendering in the Inspector.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask`1.#ctor(Fusion.Mask256)">
            <summary>
            Constructor for <see cref="T:Fusion.FieldsMask`1"/>.
            </summary>
        </member>
        <member name="M:Fusion.FieldsMask`1.#ctor">
            <summary>
            Constructor for <see cref="T:Fusion.FieldsMask`1"/>.
            </summary>
        </member>
        <member name="T:Fusion.FusionBootstrapDebugGUI">
            <summary>
            Companion component for <see cref="T:Fusion.FusionBootstrap"/>. Automatically added as needed for rendering in-game networking IMGUI.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrapDebugGUI.EnableHotkeys">
            <summary>
            When enabled, the in-game user interface buttons can be activated with the keys H (Host), S (Server) and C (Client).
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrapDebugGUI.BaseSkin">
            <summary>
            The GUISkin to use as the base for the scalable in-game UI.
            </summary>
        </member>
        <member name="M:Fusion.FusionUnitySceneManagerUtils.GetComponents``1(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            Finds all components of type <typeparam name="T"/> in the scene.
            </summary>
            <param name="scene"></param>
            <param name="includeInactive"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fusion.FusionUnitySceneManagerUtils.GetComponents``1(UnityEngine.SceneManagement.Scene,System.Boolean,UnityEngine.GameObject[]@)">
            <summary>
            Finds all components of type <typeparam name="T"/> in the scene.
            </summary>
            <param name="scene"></param>
            <param name="includeInactive"></param>
            <param name="rootObjects"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fusion.FusionUnitySceneManagerUtils.GetComponents``1(UnityEngine.SceneManagement.Scene,System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            Finds all components of type <typeparam name="T"/> in the scene.
            </summary>
            <param name="scene"></param>
            <param name="results"></param>
            <param name="includeInactive"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Fusion.FusionUnitySceneManagerUtils.FindComponent``1(UnityEngine.SceneManagement.Scene,System.Boolean)">
            <summary>
            Finds the first instance of type <typeparam name="T"/> in the scene. Returns null if no instance found.
            </summary>
            <param name="scene"></param>
            <param name="includeInactive"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault.IsSceneTakeOverEnabled">
            <summary>
            If enabled and there is an already loaded scene that matches what the scene manager has intended to load,
            that scene will be used instead and load will be avoided.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault.LogSceneLoadErrors">
            <summary>
            Should all scene load errors be logged into the console? If disabled, errors can still be retrieved via the
            <see cref="P:Fusion.NetworkSceneAsyncOp.Error"/> or <see cref="M:Fusion.NetworkSceneAsyncOp.AddOnCompleted(System.Action{Fusion.NetworkSceneAsyncOp})"/>.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault._allOwnedScenes">
            <summary>
            All the scenes loaded by all the managers. Used when <see cref="F:Fusion.NetworkSceneManagerDefault.IsSceneTakeOverEnabled"/> is enabled.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault._multiPeerSceneRoots">
            <summary>
            In multiple peer mode, each runner maintains its own scene where all the newly loaded scenes
            are moved to. This is to make sure physics are properly sandboxed.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault._runningCoroutines">
            <summary>
            List of running coroutines. Only one is actually executed at a time.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault._tempUnloadScene">
            <summary>
            For remote clients, this manager first unloads old scenes then loads the new ones. It might happen that all
            the current scenes need to be unloaded and in such case a temp scene needs to be created to ensure at least one
            scene loaded at all times. 
            </summary>
        </member>
        <member name="P:Fusion.NetworkSceneManagerDefault.MultiPeerScene">
            <summary>
            Scene used when Multiple Peer mode is used. Each loaded scene is merged into this one, allowing
            for multiple runners to have separate cross-scene physics.
            </summary>
        </member>
        <member name="P:Fusion.NetworkSceneManagerDefault.MultiplePeerDontDestroyOnLoadRoot">
            <summary>
            Root for DontDestroyOnLoad objects. Instantiated on <see cref="P:Fusion.NetworkSceneManagerDefault.MultiPeerScene"/>.
            </summary>
        </member>
        <member name="P:Fusion.NetworkSceneManagerDefault.LastSceneInfo">
            <summary>
            The last read scene info. Updated in <see cref="M:Fusion.NetworkSceneManagerDefault.OnSceneInfoChanged"/>.
            </summary>
        </member>
        <member name="M:Fusion.NetworkSceneManagerDefault.GetMultiplePeerRootForObject(UnityEngine.GameObject,System.Collections.Generic.IReadOnlyList{Fusion.NetworkSceneManagerDefault.MultiPeerSceneRoot})">
            <summary>
            Selects a scene root object to use for an object passed to <see cref="M:Fusion.NetworkSceneManagerDefault.MoveToRunnerScene(UnityEngine.GameObject)"/> in MultiplePeer mode.
            The default implementation returns the first scene root, if available.
            Override if you load multiple scenes per runner and need objects to spawn on a specific scene.
            </summary>
            <param name="obj"></param>
            <param name="sceneRoots"></param>
            <returns></returns>
        </member>
        <member name="F:Fusion.NetworkSceneManagerDefault.AddressableScenesLabel">
            <summary>
            A label by which addressable scenes can be discovered.
            </summary>
        </member>
        <member name="T:Fusion.FusionBootstrap">
            <summary>
            A Fusion prototyping class for starting up basic networking. Add this component to your startup scene, and supply a <see cref="F:Fusion.FusionBootstrap.RunnerPrefab"/>.
            Can be set to automatically startup the network, display an in-game menu, or allow simplified start calls like <see cref="M:Fusion.FusionBootstrap.StartHost"/>.
            </summary>
        </member>
        <member name="T:Fusion.FusionBootstrap.StartModes">
            <summary>
            Selection for how <see cref="T:Fusion.FusionBootstrap"/> will behave at startup.
            </summary>
        </member>
        <member name="T:Fusion.FusionBootstrap.Stage">
            <summary>
            The current stage of connection or shutdown.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.RunnerPrefab">
            <summary>
            Supply a Prefab or a scene object which has the <see cref="T:Fusion.NetworkRunner"/> component on it, 
            as well as any runner dependent components which implement <see cref="T:Fusion.INetworkRunnerCallbacks"/>, 
            such as <see cref="T:Fusion.NetworkEvents"/> or your own custom INetworkInput implementations.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.StartMode">
            <summary>
            Select how network startup will be triggered. Automatically, by in-game menu selection, or exclusively by script.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.AutoStartAs">
            <summary>
            When <see cref="F:Fusion.FusionBootstrap.StartMode"/> is set to <see cref="F:Fusion.FusionBootstrap.StartModes.Automatic"/>, this option selects if the <see cref="T:Fusion.NetworkRunner"/> 
            will be started as a dedicated server, or as a host (which is a server with a local player).
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.AutoHideGUI">
            <summary>
            <see cref="T:Fusion.FusionBootstrapDebugGUI"/> will not render GUI elements while <see cref="P:Fusion.FusionBootstrap.CurrentStage"/> == <see cref="F:Fusion.FusionBootstrap.Stage.AllConnected"/>.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.AutoClients">
            <summary>
            The number of client <see cref="T:Fusion.NetworkRunner"/> instances that will be created if running in Mulit-Peer Mode. 
            When using the Select start mode, this number will be the default value for the additional clients option box.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.ClientStartDelay">
            <summary>
            How long to wait after starting a peer before starting the next one.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.ServerPort">
            <summary>
            The port that server/host <see cref="T:Fusion.NetworkRunner"/> will use.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.DefaultRoomName">
            <summary>
            The default room name to use when connecting to photon cloud.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.AlwaysShowStats">
            <summary>
            Will automatically enable <see cref="T:Fusion.FusionStats"/> once peers have finished connecting.
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap.InitialScenePath">
            <summary>
            The Scene that will be loaded after network shutdown completes (all peers have disconnected). 
            If this field is null or invalid, will be set to the current scene when <see cref="T:Fusion.FusionBootstrap"/> runs Awake().
            </summary>
        </member>
        <member name="F:Fusion.FusionBootstrap._currentStage">
            <summary>
            Indicates which step of the startup process <see cref="T:Fusion.FusionBootstrap"/> is currently in.
            </summary>
        </member>
        <member name="P:Fusion.FusionBootstrap.CurrentStage">
            <summary>
            Indicates which step of the startup process <see cref="T:Fusion.FusionBootstrap"/> is currently in.
            </summary>
        </member>
        <member name="P:Fusion.FusionBootstrap.LastCreatedClientIndex">
            <summary>
            The index number used for the last created peer.
            </summary>
        </member>
        <member name="P:Fusion.FusionBootstrap.CurrentServerMode">
            <summary>
            The server mode that was used for initial startup. Used to inform UI which client modes should be available.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartSinglePlayer">
            <summary>
            Start a single player instance.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartServer">
            <summary>
            Start a server instance.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartHost">
            <summary>
            Start a host instance. This is a server instance, with a local player.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartClient">
            <summary>
            Start a client instance.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartServerPlusClients">
            <summary>
            Start a Fusion server instance, and the number of client instances indicated by <see cref="F:Fusion.FusionBootstrap.AutoClients"/>. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartHostPlusClients">
            <summary>
            Start a Fusion host instance, and the number of client instances indicated by <see cref="F:Fusion.FusionBootstrap.AutoClients"/>. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartServerPlusClients(System.Int32)">
            <summary>
            Start a Fusion server instance, and the indicated number of client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartHostPlusClients(System.Int32)">
            <summary>
            Start a Fusion host instance (server with local player), and the indicated number of additional client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartMultipleClients(System.Int32)">
            <summary>
            Start a Fusion host instance (server with local player), and the indicated number of additional client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:Fusion.FusionBootstrap.StartMultipleSharedClients(System.Int32)">
            <summary>
            Start as Room on the Photon cloud, and connects as one or more clients.
            </summary>
            <param name="clientCount"></param>
        </member>
        <member name="T:Fusion.FusionScalableIMGUI">
            <summary>
            In-Game IMGUI style used for the <see cref="T:Fusion.FusionBootstrapDebugGUI"/> interface.
            </summary>
        </member>
        <member name="M:Fusion.FusionScalableIMGUI.GetScaledSkin(UnityEngine.GUISkin,System.Single@,System.Single@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Get the custom scalable skin, already resized to the current screen. Provides the height, width, padding and margin used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusion.FusionScalableIMGUI.ScaleGuiSkinToScreenHeight">
            <summary>
            Modifies a skin to make it scale with screen height.
            </summary>
            <param name="skin"></param>
            <returns>Returns (height, width, padding, top-margin, left-box-margin) values applied to the GuiSkin</returns>
        </member>
        <member name="F:Fusion.NetworkObjectProviderDefault.DelayIfSceneManagerIsBusy">
            <summary>
            If enabled, the provider will delay acquiring a prefab instance if the scene manager is busy.
            </summary>
        </member>
        <member name="T:Fusion.IRunnerVisibilityRecognizedType">
            <summary>
            Flags a MonoBehaviour class as a RunnerVisibilityControl recognized type. 
            Will be included in runner visibility handling, and will be found by <see cref="T:Fusion.EnableOnSingleRunner"/> component finds.
            </summary>
        </member>
        <member name="T:Fusion.RunnerVisibilityLink">
            <summary>
            Identifies visible/audible components (such as renderers, canvases, lights) that should be enabled/disabled by runner visibility handling.
            Automatically added to scene objects and spawned objects during play if running in <see cref="F:Fusion.NetworkProjectConfig.PeerModes.Multiple"/>. 
            Additionally this component can be added manually at development time to identify specific Behaviours or Renderers you would like to restrict to one enabled copy at a time.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink._recognizedBehaviourNames">
            <summary>
            Types that fusion.runtime isn't aware of, which need to be found using names instead.
            </summary>
        </member>
        <member name="T:Fusion.RunnerVisibilityLink.PreferredRunners">
            <summary>
            The peer runner that will be used if more than one runner is visible, and this node was manually added by developer (indicating only one instance should be visible at a time).
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.PreferredRunners.InputAuthority">
            <summary>
            The peer/runner with input authority will be used if visible.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.PreferredRunners.Server">
            <summary>
            The server peer/runner will be used if visible.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.PreferredRunners.Client">
            <summary>
            The first client peer/runner will be used if visible.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.PreferredRunner">
            <summary>
            If more than one runner instance is visible, this indicates which peer's clone of this entity should be visible.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.Component">
            <summary>
            The associated component with this node. This Behaviour or Renderer will be enabled/disabled when its NetworkRunner.IsVisible value is changed.
            </summary>
        </member>
        <member name="F:Fusion.RunnerVisibilityLink.Guid">
            <summary>
            Guid is used for common objects (user flagged components that should only run in one instance), to identify matching clones.
            </summary>
        </member>
        <member name="P:Fusion.RunnerVisibilityLink.DefaultState">
            <summary>
            Set to false to indicate that this object should remain disabled even when <see cref="!:NetworkRunner.IsVisible"/> is set to true.
            </summary>
        </member>
        <member name="M:Fusion.RunnerVisibilityLink.SetEnabled(System.Boolean)">
            <summary>
            Sets the visibility state of this node.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="T:Fusion.FusionStatsGraph">
            <summary>
            Individual graph components generated and used by <see cref="T:Fusion.FusionStats"/>.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraph._layout">
            <summary>
            Select between automatic formatting (based on size and aspect ratio of the graph) and manual selection of the various graph layouts available.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraph._showGraph">
            <summary>
            Controls if the graph shader will render. Currently the graph shader only works in Overlay mode, so if forced to show Always here, it will not render correctly in 3d space.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraph.Padding">
            <summary>
            Padding added to text and other layout objects.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraph._alwaysExpandGraph">
            <summary>
            The graph shaded area (which is only visible in Overlay mode) will expand to the full extends of the <see cref="T:Fusion.FusionStatsGraph"/> component when this is enabled, regardless of size.
            When false, the graph will automatically expand only as needed.
            </summary>
        </member>
        <member name="F:Fusion.FusionStatsGraph._showUITargets">
            <summary>
            Exposes the UI labels and controls of <see cref="T:Fusion.FusionStatsGraph"/>, so they may be modified if customizing this graph.
            </summary>
        </member>
        <member name="M:Fusion.FusionStatsGraph.Refresh">
            <summary>
            Returns true if the graph rendered. False if the size was too small and the graph was hidden.
            </summary>
        </member>
        <member name="M:Fusion.FusionStatsGraph.Create(Fusion.FusionStats,Fusion.StatsInternal.StatSourceTypes,System.Int32,UnityEngine.RectTransform)">
            <summary>
            Creates a new GameObject with <see cref="T:Fusion.FusionStatsGraph"/> and attaches it to the specified parent.
            </summary>
        </member>
        <member name="M:Fusion.FusionStatsGraph.Generate(Fusion.StatsInternal.StatSourceTypes,System.Int32,UnityEngine.RectTransform)">
            <summary>
            Generates the Graph UI for this <see cref="T:Fusion.FusionStatsGraph"/>.
            </summary>
        </member>
    </members>
</doc>
